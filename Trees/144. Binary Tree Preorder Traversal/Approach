Given the root of a binary tree, return the preorder traversal of its nodes' values.

Example 1:
Input: root = [1,null,2,3]
Output: [1,2,3]

Example 2:
Input: root = [1,2,3,4,5,null,8,null,null,6,7,9]
Output: [1,2,4,5,6,7,3,8,9]

Example 3:
Input: root = []
Output: []

Example 4:
Input: root = [1]
Output: [1]

Constraints:
The number of nodes in the tree is in the range [0, 100].
-100 <= Node.val <= 100
__________________________________________

SOLUTION

RECURSIVE DFS -

1. Create an empty list to store the result.
2. Use a helper function (dfs) to perform recursive traversal.
3. In each call, if the node is null, return.
4. Otherwise, add the node's value to the result list.
5. Recursively visit the left child.
6. Then recursively visit the right child.
7. Return the final result list after traversal.

TIME: O(n)
SPACE: O(n)
