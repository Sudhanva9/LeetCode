Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.
An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.

Example 1:
Input: grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]
Output: 1

Example 2:
Input: grid = [
  ["1","1","0","0","0"],
  ["1","1","0","0","0"],
  ["0","0","1","0","0"],
  ["0","0","0","1","1"]
]
Output: 3
 
Constraints:
m == grid.length
n == grid[i].length
1 <= m, n <= 300
grid[i][j] is '0' or '1'.
______________________________________

SOLUTION

BFS

1. Iterate over each cell in the grid.
2. When a land cell ('1') is encountered, initiate a BFS to explore the entire island.
3. During BFS, mark each visited land cell as '0' to prevent revisiting.
4. Each BFS corresponds to discovering one new island, so increment the island count.
5. Continue this process for all cells in the grid.
6. The final count represents the total number of islands present in the grid.

TIME: O(m * n)
SPACE: O(m * n)
