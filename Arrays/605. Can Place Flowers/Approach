You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.
Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return true if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.

Example 1:
Input: flowerbed = [1,0,0,0,1], n = 1
Output: true

Example 2:
Input: flowerbed = [1,0,0,0,1], n = 2
Output: false

Constraints:
1 <= flowerbed.length <= 2 * 104
flowerbed[i] is 0 or 1.
There are no two adjacent flowers in flowerbed.
0 <= n <= flowerbed.length
____________________________________________

SOLUTION

1. Create a new array f with extra space at the beginning and end to simplify boundary checks.
2. Copy the original flowerbed into the new array f, shifting it by one index.
3. Iterate through the array f, checking if a flower can be planted (i.e., the previous, current, and next positions are all empty).
4. If planting is possible, place a flower (1) and decrease n.
5. Return true if all n flowers are placed (n <= 0), otherwise, return false.


TIME: O(n)
SPACE: O(n)
