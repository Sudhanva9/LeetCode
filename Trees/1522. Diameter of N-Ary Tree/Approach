Given a root of an N-ary tree, you need to compute the length of the diameter of the tree.
The diameter of an N-ary tree is the length of the longest path between any two nodes in the tree. This path may or may not pass through the root.
(Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value.)

Example 1:
Input: root = [1,null,3,2,4,null,5,6]
Output: 3
Explanation: Diameter is shown in red color.

Example 2:
Input: root = [1,null,2,null,3,4,null,5,null,6]
Output: 4

Example 3:
Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]
Output: 7

Constraints:

The depth of the n-ary tree is less than or equal to 1000.
The total number of nodes is between [1, 104].
__________________________________________________

SOLUTION

1. If the tree is empty or has no children, the diameter is 0.
2. Use DFS (Depth-First Search) to traverse the tree and calculate the height of each subtree.
3. For each node, find the two longest heights among its children.
4. The diameter at that node is the sum of these two heights plus 2 (for edges).
5. Keep track of the maximum diameter found across all nodes.
6. Return the height of the current node as 1 + the maximum height of its children.
7. The final diameter is stored in maxDiameter[0].

TIME: O(n)
SPACE: O(n)
