Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.
You must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.

Example 1:
Input: num1 = "11", num2 = "123"
Output: "134"

Example 2:
Input: num1 = "456", num2 = "77"
Output: "533"

Example 3:
Input: num1 = "0", num2 = "0"
Output: "0"

Constraints:

1 <= num1.length, num2.length <= 104
num1 and num2 consist of only digits.
num1 and num2 don't have any leading zeros except for the zero itself.
___________________________________________

SOLUTION

1. Use a StringBuilder to store the result.
2. Maintain two pointers (l1, l2) starting from the end of num1 and num2.
3. Use a carry variable to handle digit overflow.
4. In each iteration:
    Convert the current characters to digits (x1 and x2).
    Compute the sum of the digits and carry, and store the last digit.
    Update the carry for the next iteration.
5. After processing both numbers, if there is a remaining carry, append it.
6. Reverse the result and return it as a string.

TIME: O(n)
SPACE: O(n)
