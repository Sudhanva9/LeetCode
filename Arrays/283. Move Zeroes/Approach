Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]
 
Constraints:
1 <= nums.length <= 104
-231 <= nums[i] <= 231 - 1

______________________________________________

SOLUTION

1. Start with a pointer l at the beginning of the array.
2. Iterate through the array using another pointer r.
3. If nums[r] is not zero, swap it with nums[l].
4. Move l forward after each swap to keep track of the last non-zero position.
5. This ensures all non-zero elements are moved to the front while zeros shift to the end.

TIME: O(n)
SPACE: O(1)
