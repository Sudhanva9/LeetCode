Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.

Example 1:
Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:

Example 2:
Input: nums = [1,3]
Output: [3,1]
Explanation: [1,null,3] and [3,1] are both height-balanced BSTs.
 
Constraints:
1 <= nums.length <= 104
-104 <= nums[i] <= 104
nums is sorted in a strictly increasing order.
_____________________________________

SOLUTION

1. Use a recursive helper function to build the tree from a sorted array.
2. At each step, find the middle element of the current subarray â€” it becomes the root.
3. Recursively build the left subtree using the left half of the array.
4. Recursively build the right subtree using the right half of the array.
5. Return the root node to connect the tree.
6. Base case: if the left index is greater than the right, return null.

TIME: O(n)
SPACE: O(n)
