Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
Example 2:

Input: head = [1], n = 1
Output: []
Example 3:

Input: head = [1,2], n = 1
Output: [1]

Constraints:

The number of nodes in the list is sz.
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz
_______________________________________________

SOLUTION

n = 2
So we have to remove 4 and link 3 to 5

DUMMY      1      2      3      4      5      NULL
  L                      R
           L                    R
                  L                    R
                         L                      R

1. Start Left from the Dummy Node.
2. Start Right from the (Head + n) position.
3. Now, the Left pointer is at the node before n=2. 
4. We have to ignore 4 (Left.next) and update Left.next = Left.next.next.
5. Return Dummy.next.

TIME: O(n)
SPACE: O(1)
