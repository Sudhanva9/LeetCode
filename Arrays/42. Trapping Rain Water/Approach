Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Example 1:
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.

Example 2:
Input: height = [4,2,0,3,2,5]
Output: 9

Constraints:
n == height.length
1 <= n <= 2 * 104
0 <= height[i] <= 105
__________________________

SOLUTION

TWO POINTERS:

1. Use two pointers: one starting from the left (l), and one from the right (r).
2. Track the maximum height seen so far from both ends using leftMax and rightMax.
3. While l < r, compare leftMax and rightMax:
    If leftMax is smaller:
        Move l one step to the right.
        Update leftMax and add the trapped water at that index (leftMax - height[l]).
    Otherwise:
        Move r one step to the left.
        Update rightMax and add the trapped water at that index (rightMax - height[r]).
4. Repeat until the pointers meet.
5. Return the total trapped water.

TIME: O(n)
SPACE: O(1)
