Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]

Example 3:
Input: root = []
Output: []

Constraints:

The number of nodes in the tree is in the range [0, 2000].
-1000 <= Node.val <= 1000
____________________________________________________________

SOLUTION

BFS -

1. Create a list res to store the final result.
2. Use a queue q to help process nodes level by level.
3. Start by adding the root node to the queue.
4. While the queue is not empty:
    Create a list level to store values of the current level.
    Process all nodes in the queue for this level.
    Remove each node from the queue, add its value to level, and enqueue its left and right children (if they exist).
5. If level is not empty, add it to res.
6. Return res after processing all levels.

TIME: O(n)
SPACE: O(n)
