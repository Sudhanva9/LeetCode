Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.
You must write an algorithm with O(log n) runtime complexity.

Example 1:

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4
Explanation: 9 exists in nums and its index is 4
Example 2:

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1
Explanation: 2 does not exist in nums so return -1

Constraints:

1 <= nums.length <= 104
-104 < nums[i], target < 104
All the integers in nums are unique.
nums is sorted in ascending order.
__________________________________________________

SOLUTION

1. Using two pointers, L & R, and a mid = (L+R)/2, search the given array.
2. If the target is greater than the mid: Shift Left to (mid+1) position.
3. Else if the target is lesser than the mid: Shift Right to (mid-1) position.
4. Else return the mid.
5. Return -1.

TIME: O(log n)
SPACE: O(1)
