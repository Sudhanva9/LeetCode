Given a string s, return whether s is a valid number.
For example, all the following are valid numbers: "2", "0089", "-0.1", "+3.14", "4.", "-.9", "2e10", "-90E3", "3e+7", "+6e-1", "53.5e93", "-123.456e789", while the following are not valid numbers: "abc", "1a", "1e", "e3", "99e2.5", "--6", "-+3", "95a54e53".
Formally, a valid number is defined using one of the following definitions:
An integer number followed by an optional exponent.
A decimal number followed by an optional exponent.
An integer number is defined with an optional sign '-' or '+' followed by digits.
A decimal number is defined with an optional sign '-' or '+' followed by one of the following definitions:
Digits followed by a dot '.'.
Digits followed by a dot '.' followed by digits.
A dot '.' followed by digits.
An exponent is defined with an exponent notation 'e' or 'E' followed by an integer number.
The digits are defined as one or more digits.

Example 1:
Input: s = "0"
Output: true

Example 2:
Input: s = "e"
Output: false

Example 3:
Input: s = "."
Output: false

Constraints:
1 <= s.length <= 20
s consists of only English letters (both uppercase and lowercase), digits (0-9), plus '+', minus '-', or dot '.'.
________________________________________________________

SOLUTION

1. Use three boolean flags:
    seenDigit: To check if at least one digit has appeared.
    seenExponent: To track if an exponent (e or E) has been seen.
    seenDot: To track if a decimal point . has been seen.
2. Iterate over each character in the string:
    If it’s a digit, set seenDigit to true.
    If it’s a sign (+ or -), it must either be the first character or immediately follow an e/E.
    If it’s an exponent (e or E):
        Make sure we haven’t seen one before.
        Also, a number must precede the exponent → so seenDigit must be true.
        Then, set seenExponent = true and reset seenDigit = false to ensure digits follow the exponent.
    If it’s a dot (.):
      Ensure we haven’t already seen a dot or exponent (dots are not valid in the exponent part).
      Then set seenDot = true.
    If it's anything else, it's invalid → return false.
3. At the end, return true only if at least one digit was seen (seenDigit is true).

TIME: O(n)
SPACE: O(1)
