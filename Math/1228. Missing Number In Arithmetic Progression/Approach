In some array arr, the values were in arithmetic progression: the values arr[i + 1] - arr[i] are all equal for every 0 <= i < arr.length - 1.
A value from arr was removed that was not the first or last value in the array.
Given arr, return the removed value.

Example 1:
Input: arr = [5,7,11,13]
Output: 9
Explanation: The previous array was [5,7,9,11,13].

Example 2:
Input: arr = [15,13,12]
Output: 14
Explanation: The previous array was [15,14,13,12].

Constraints:
3 <= arr.length <= 1000
0 <= arr[i] <= 105
The given array is guaranteed to be a valid array.
____________________________________

SOLUTION

1. Since the array is part of an arithmetic progression with one missing number, first calculate the common difference using the first and last elements.
2. Start from the expected first value and go through the array.
3. For each element, check if it matches the expected value in the progression.
4. If an element doesnâ€™t match the expected value, that expected value is the missing number.
5. Return the expected value where the mismatch happens.

TIME: O(n)
SPACE: O(1)
