You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
__________________________________

SOLUTION

I. Own

Convert both strings s and t to character arrays and sort them.
Convert the sorted character arrays back into strings sS and sT.
Assume the last character in t is the extra one and store it in res.
Use two pointers p and q to compare characters in sS and sT.
If a mismatch is found during traversal, update res to the mismatched character from t and break.
If no mismatch is found, the extra character is the last one in t.
Return res as the extra character.

II. Optimized (Same solution, just a bit optimized: without converting charArrays back to Strings)

Convert both strings s and t into character arrays.
Sort both arrays so characters are in the same order.
Loop through the arrays and compare characters at each position.
If a mismatch is found, that character in t is the extra one — return it.
If all characters match, the extra character is at the end of t — return the last character.


TIME: O(n log n)
SPACE: O(n)
