Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.
An integer a is closer to x than an integer b if:
|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 
Example 1:
Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]

Example 2:
Input: arr = [1,1,2,3,4,5], k = 4, x = -1
Output: [1,1,2,3]

Constraints:
1 <= k <= arr.length
1 <= arr.length <= 104
arr is sorted in ascending order.
-104 <= arr[i], x <= 104
____________________________________________

SOLUTION

1. You're given a sorted array, and you need to find the k elements closest to a target x.
2. Use binary search to find the leftmost starting index l of the window of size k.
3. Set l = 0 and r = arr.length - k â€” these are possible starting points for the window.
4. In the binary search:
      Check the middle index mid.
      Compare the distance from x to arr[mid] and to arr[mid + k].
      If arr[mid + k] is closer to x, move l right to mid + 1.
      Else, move r left to mid.
5. When the binary search finishes, l is the starting index of the answer window.
6. Collect the k elements starting from l.

TIME: O(log(nâˆ’k)+k)
SPACE: O(k) for the output array.
