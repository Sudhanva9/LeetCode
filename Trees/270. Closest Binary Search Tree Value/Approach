Given the root of a binary search tree and a target value, return the value in the BST that is closest to the target. If there are multiple answers, print the smallest.

Example 1:
Input: root = [4,2,5,1,3], target = 3.714286
Output: 4

Example 2:
Input: root = [1], target = 4.428571
Output: 1
 
Constraints:
The number of nodes in the tree is in the range [1, 104].
0 <= Node.val <= 109
-109 <= target <= 109
______________________________________

SOLUTION

1. Initialize Closest Value: Start with closestDist as a large value and res as 0.
2. Traverse the Tree: Use a while loop to traverse the tree.
3. Check Distance: Calculate the absolute difference between the current nodeâ€™s value and target.
4. Update Closest Value: If the current value is closer to target, update closestDist and res.
5. Perfect Match: If distance == 0, return the exact match immediately.
6. Move in the Tree: If the current value is less than target, move right; otherwise, move left.
7. Return the Closest Value: After traversal, return res, which holds the closest value.

TIME: O(log n)
SPACE: O(1)
