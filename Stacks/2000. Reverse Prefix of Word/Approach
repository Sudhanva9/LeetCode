Given a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch (inclusive). If the character ch does not exist in word, do nothing.
For example, if word = "abcdefd" and ch = "d", then you should reverse the segment that starts at 0 and ends at 3 (inclusive). The resulting string will be "dcbaefd".
Return the resulting string.

Example 1:
Input: word = "abcdefd", ch = "d"
Output: "dcbaefd"
Explanation: The first occurrence of "d" is at index 3. 
Reverse the part of word from 0 to 3 (inclusive), the resulting string is "dcbaefd".

Example 2:
Input: word = "xyxzxe", ch = "z"
Output: "zxyxxe"
Explanation: The first and only occurrence of "z" is at index 3.
Reverse the part of word from 0 to 3 (inclusive), the resulting string is "zxyxxe".

Example 3:
Input: word = "abcd", ch = "z"
Output: "abcd"
Explanation: "z" does not exist in word.
You should not do any reverse operation, the resulting string is "abcd".
 
Constraints:
1 <= word.length <= 250
word consists of lowercase English letters.
ch is a lowercase English letter.
______________________________________

SOLUTION

1. Check if the input string is null, empty, or if the character ch is '\0'. If any condition is true, return an empty string.
2. Create a stack to store characters that will be reversed.
3. Loop through the input string:
    Push each character to the stack.
    If the character matches ch, push it, move to the next index, and break the loop.
4. If the loop ends without finding ch, return the original string as no prefix needs to be reversed.
5. Pop all characters from the stack and append them to a StringBuilder to form the reversed prefix.
6. Append the remaining part of the string (from the index after ch) to the result.
7. Return the final concatenated string.

TIME: O(n)
SPACE: O(n)
