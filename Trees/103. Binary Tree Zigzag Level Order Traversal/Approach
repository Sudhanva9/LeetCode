Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]

Example 3:
Input: root = []
Output: []
 
Constraints:
The number of nodes in the tree is in the range [0, 2000].
-100 <= Node.val <= 100
______________________________________

SOLUTION

1. If the tree is empty, return an empty result.
2. Use a queue to perform level order (BFS) traversal starting from the root.
3. For each level:
      Process all nodes in the queue (which belong to the current level).
      Collect their values in a list.
      Add their left and right children to the queue for the next level.
4. If it's an odd-numbered level (like the 2nd, 4th, etc.), reverse the list to get the zigzag pattern.
5. Add each level's list to the final result.
6. Continue until all levels are processed.

TIME: O(n)
SPACE: O(n)
